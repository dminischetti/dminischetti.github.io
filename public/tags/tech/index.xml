<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Tech on Dominic&#39;s Sandbox</title>
    <link>http://localhost:1313/tags/tech/</link>
    <description>Recent content in Tech on Dominic&#39;s Sandbox</description>
    <generator>Hugo -- 0.144.2</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 01 Apr 2025 09:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How a CMS Can Make or Break Digital Publishing (And Why I’m All In with BLOX)</title>
      <link>http://localhost:1313/posts/cms-digital-publishing-blox-nxt/</link>
      <pubDate>Tue, 01 Apr 2025 09:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/cms-digital-publishing-blox-nxt/</guid>
      <description>A look at why a great CMS is essential for digital publishing, how BLOX Digital is leading the way, and why I&amp;#39;m excited about BLOX NXT.</description>
      <content:encoded><![CDATA[<p>Ever tried cooking a full meal with no kitchen tools? No knives, no stove, no pots—just your bare hands and sheer determination. Sounds impossible, right? That’s exactly what running a news website without a <strong>Content Management System (CMS)</strong> feels like.</p>
<p>I should know. <strong>I work as a backend PHP developer at BLOX Digital</strong>, where I make sure newsrooms don’t have to suffer through that nightmare. And I don’t just work on CMS platforms—I believe in them. <strong>I don’t just write code for a CMS; I also write about it.</strong></p>
<p>For me, my job and my blog are deeply connected. Every day, I see firsthand how the right CMS makes a newsroom more efficient, helps journalists focus on their work instead of fighting with bad software, and ensures that digital news operations actually generate revenue. And when I see how technology can solve real-world problems, I naturally want to talk about it. <strong>That’s why I blog—not just because I love writing, but because my work fuels my passion, and my passion fuels my work.</strong></p>
<h2 id="so-what-exactly-is-a-cms">So, What Exactly Is a CMS?</h2>
<p>Alright, let’s make this simple. A CMS is basically <strong>the control center of a website</strong>. It lets journalists and editors write, edit, publish, and organize their content <strong>without touching a single line of code</strong>.</p>
<p>Think of it like a <strong>kitchen</strong>. You don’t need to be a chef to make a meal if you’ve got an oven, a knife, and a few good recipes. Same with a CMS—it gives media companies the tools to keep their sites updated, organized, and profitable, without needing a developer for every little change.</p>
<p>Without a CMS? Every update is manual. Every layout change is a headache. Every article is a potential disaster waiting to happen. <strong>It’s not pretty.</strong></p>
<h2 id="why-should-you-care">Why Should You Care?</h2>
<p>Even if you don’t run a news site, you’ve probably experienced <strong>what happens when a CMS is bad (or nonexistent).</strong></p>
<ul>
<li><strong>A painfully slow website</strong> (the kind that makes you question all your life choices).</li>
<li><strong>Articles impossible to find</strong> (why is the latest election update buried under &ldquo;10 Surprising Uses for Olive Oil&rdquo;?).</li>
<li><strong>A paywall that feels like a trap</strong> (one second you’re reading, the next you’re being asked to hand over your credit card like it’s a ransom demand).</li>
</ul>
<p>A <strong>good CMS</strong>, though? It keeps everything <strong>fast, smooth, and user-friendly</strong>. It helps news sites work efficiently while making sure journalists <strong>actually get paid</strong>.</p>
<p>And that’s exactly what we do at <strong>BLOX Digital</strong>.</p>
<h2 id="why-blox-digital-and-why-im-excited-about-blox-nxt">Why BLOX Digital? (And Why I’m Excited About BLOX NXT)</h2>
<p>At <strong>BLOX Digital</strong>, we don’t just build CMS platforms. We build <strong>the CMS platform</strong>.</p>
<ul>
<li><strong>Powering 2,000+ news sites</strong> across the U.S.</li>
<li><strong>Serving 6.8 billion pageviews a year</strong></li>
<li><strong>Helping media companies stay profitable</strong> while keeping journalism accessible</li>
</ul>
<h3 id="how">How?</h3>
<ul>
<li><strong>BLOX CMS</strong> – The foundation. This is what keeps content flowing, newsrooms running, and websites from breaking every five minutes.</li>
<li><strong>BLOX Audience+</strong> – The smart paywall. Instead of slamming the door in readers’ faces, it nudges them toward subscriptions in a way that makes sense.</li>
<li><strong>BLOX YieldUp</strong> – Our ad revenue optimizer that helps media companies make money without turning their sites into a mess.</li>
</ul>
<p>But the thing I’m really excited about?</p>
<h3 id="blox-nxt-the-future-of-digital-publishing">BLOX NXT: The Future of Digital Publishing</h3>
<p>BLOX NXT is a complete reimagining of how CMS platforms should work. It’s not just an upgrade—it’s a whole new system.</p>
<ul>
<li><strong>Real-time collaboration</strong> – No more “this article is locked by another user.” Multiple people can edit at once, like Google Docs but made for journalism.</li>
<li><strong>AI-powered tools</strong> – Smart tagging, automated recommendations, and workflow optimization so editors spend less time clicking buttons and more time creating content.</li>
<li><strong>One-click publishing to multiple platforms</strong> – Website, mobile app, social media, email newsletters, even print—all from one place.</li>
<li><strong>A modern, intuitive interface</strong> – Let’s be real, some CMS dashboards look like they were built in 2005. BLOX NXT looks and feels like it belongs in 2025.</li>
</ul>
<p>And here’s the best part: it’s rolling out now.</p>
<p>Early partners are already using BLOX NXT, and the feedback has been outstanding. Editors love the speed and collaboration, media execs love the revenue potential, and developers (like me!) love that it makes content management a whole lot less painful.</p>
<h2 id="the-biggest-challenge-its-not-the-techits-the-people">The Biggest Challenge? It’s Not the Tech—It’s the People.</h2>
<p>You’d think every media company would jump on this, right? But nope.</p>
<p>Guy Tasaka, a longtime digital media expert, put it best:</p>
<blockquote>
<p><em>“All the technology the industry needs to be wildly successful exists today, but the culture won’t let them use it.”</em></p></blockquote>
<p>Basically? The tools are here. The AI-powered automation, the smarter paywalls, the revenue-focused features—they all exist. But some media companies still resist change.</p>
<p>They see their websites as expenses instead of investments. They stick to outdated workflows because &ldquo;that’s how we’ve always done it.&rdquo;</p>
<p>And that’s why BLOX NXT isn’t just about better tech—it’s about making sure journalism can keep up with the digital world.</p>
<h2 id="the-bottom-line-my-job-and-my-blog-are-one-and-the-same">The Bottom Line: My Job and My Blog Are One and the Same</h2>
<p>I don’t just work on CMS platforms—I believe in them.</p>
<p>That’s why I write about them. What I do at BLOX Digital and what I write here are the same thing: helping media companies survive and thrive in the digital age.</p>
<p>My work fuels my blog. My blog fuels my passion for my work. It’s all connected.</p>
<p>Newsrooms don’t have time to waste on bad tech. Readers don’t have patience for clunky websites. And journalism deserves better tools.</p>
<p>That’s why BLOX NXT matters. And that’s why I can’t stop talking about it.</p>
]]></content:encoded>
    </item>
    <item>
      <title>The 7 Stages of a Developer Fixing a Bug</title>
      <link>http://localhost:1313/posts/the-7-stages-of-a-developer-fixing-a-bug/</link>
      <pubDate>Fri, 31 Jan 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/the-7-stages-of-a-developer-fixing-a-bug/</guid>
      <description>Fixing a bug isn’t just about code—it’s an emotional rollercoaster. Discover the 7 stages every developer goes through while debugging.</description>
      <content:encoded><![CDATA[<p>If you’ve ever worked as a developer, you know that <strong>fixing a bug is never just fixing a bug</strong>.</p>
<p>It’s an <strong>emotional rollercoaster</strong>, a <strong>psychological test</strong>, and sometimes, <strong>a personal attack on your own intelligence</strong>.</p>
<p>And no matter how many times we do this, it always follows <strong>the same pattern</strong>.</p>
<hr>
<h2 id="1-confidence-"><strong>1. Confidence</strong> (<em>&ldquo;This will be easy.&rdquo;</em>)</h2>
<p>You open the ticket, read the description, and think, <em>Oh, I see what’s happening. I’ll knock this out in 10 minutes.</em></p>
<p>Maybe you even tell your boss or a teammate:<br>
<em>&ldquo;I’ll have a fix pushed soon.&rdquo;</em></p>
<p>(<strong>A fatal mistake.</strong>)</p>
<p>Every. Single. Time. I convince myself that it’s just a quick fix.<br>
I even schedule my next coffee break around it.</p>
<p>It’s like <strong>walking into a trap you built yourself</strong>… but you keep doing it anyway.</p>
<hr>
<h2 id="2-confusion-"><strong>2. Confusion</strong> (<em>&ldquo;Wait. What?&rdquo;</em>)</h2>
<p>You try the <strong>obvious fix</strong>. It doesn’t work.</p>
<p>You check the logs. <strong>The logs don’t make sense.</strong></p>
<p>You check the database. <strong>The values should be correct.</strong></p>
<p>You stare at the code like it <strong>personally betrayed you.</strong></p>
<p>You read the same line <strong>ten times</strong>, convinced you’re missing something.<br>
You start <strong>questioning your sanity.</strong></p>
<p><em>&ldquo;This should work. Why doesn’t it work?&rdquo;</em></p>
<p>Welcome to the rabbit hole.</p>
<hr>
<h2 id="3-denial-"><strong>3. Denial</strong> (<em>&ldquo;This bug shouldn’t even be possible.&rdquo;</em>)</h2>
<p>At this point, you start <strong>questioning reality itself.</strong></p>
<ul>
<li><em>This code has been running fine for years. Why is it breaking now?</em></li>
<li><em>It works locally but not in production. What dark magic is this?</em></li>
<li><em>Did I introduce this bug? No… no, it can’t be me. Right? RIGHT?</em></li>
</ul>
<p>At this point, I start suspecting <strong>cosmic interference.</strong></p>
<p>Mercury must be in retrograde.<br>
Maybe the server just hates me.<br>
Or maybe&hellip; just maybe&hellip;</p>
<p><strong>The compiler is broken.</strong></p>
<p>Clearly, <strong>it’s not my fault.</strong></p>
<p>It <strong>can’t</strong> be.</p>
<hr>
<h2 id="4-bargaining-"><strong>4. Bargaining</strong> (<em>&ldquo;What if I just&hellip; add some debug logs?&rdquo;</em>)</h2>
<p>You’re lost. Desperate.</p>
<p>You start throwing in <code>var_dump()</code>, <code>console.log()</code>, and debug prints <strong>like a mad scientist experimenting with electricity.</strong></p>
<p>I’ve added <strong>so many logs</strong> that my console looked like <strong>the Matrix</strong>.</p>
<p><em>&ldquo;Maybe if I just add one more debug statement, everything will make sense.&rdquo;</em></p>
<p>It <strong>never does.</strong></p>
<p>Nothing makes sense. You add <strong>more logs.</strong><br>
You <strong>commit to a full-on print statement religion.</strong></p>
<p>The logs only make things <strong>worse.</strong></p>
<hr>
<h2 id="5-anger-"><strong>5. Anger</strong> (<em>&ldquo;WHO WROTE THIS CODE?!&rdquo;</em>)</h2>
<p>You check <code>git blame</code>. You see a name.</p>
<p>It’s <strong>your name.</strong></p>
<p>…Oh.</p>
<p>This is the stage where I briefly consider <strong>quitting tech and becoming a goat farmer.</strong></p>
<p>Maybe life would be simpler if I just <strong>herded goats.</strong></p>
<p>Goats <strong>don’t</strong> have bugs.</p>
<hr>
<h2 id="6-acceptance-"><strong>6. Acceptance</strong> (<em>&ldquo;Fine. I’ll actually debug this properly.&rdquo;</em>)</h2>
<p>You take a deep breath.</p>
<p>You <strong>go back to the basics</strong>.</p>
<p>Step through the code. <strong>Check every assumption.</strong><br>
Slowly, painfully, you start to <strong>understand</strong>.</p>
<p>You realize you were <strong>overcomplicating things</strong>.<br>
You stop treating it like a <strong>personal attack</strong> and start treating it like <strong>a problem to solve</strong>.</p>
<p>And then, after <strong>hours (or days)…</strong></p>
<p>You <strong>find it.</strong></p>
<p>The bug.</p>
<p>Some missing condition. A logic error. A typo.<br>
Something so <strong>small yet so catastrophic</strong> that you briefly consider quitting tech <strong>again</strong>.</p>
<p>I’ve lost hours to a <strong>misplaced semicolon</strong>.<br>
I’ve questioned my <strong>entire career</strong> over a <code>&lt;=</code> that should have been <code>&lt;</code>.</p>
<p>And in this moment? I feel <strong>both victorious and ashamed.</strong></p>
<hr>
<h2 id="7-victory-and-regret-"><strong>7. Victory (and Regret)</strong> (<em>&ldquo;Fixed! …Oh no.&rdquo;</em>)</h2>
<p>You push the fix. You celebrate.</p>
<p>You feel like <strong>a god.</strong></p>
<p>Then you look at the time and realize:<br>
<strong>You just spent 6 hours fixing a one-line bug.</strong></p>
<p>You close the ticket. You move on.<br>
You tell yourself <strong>it won’t happen again.</strong></p>
<p>But deep down, you know the truth.</p>
<p>It <strong>always</strong> happens again.</p>
<p>Because this is the life we chose.</p>
<p>The <strong>endless cycle</strong> of <strong>confidence</strong>, <strong>confusion</strong>, <strong>denial</strong>, <strong>bargaining</strong>, <strong>anger</strong>, <strong>acceptance</strong>, and <strong>regret</strong>.</p>
<p>And honestly?</p>
<p><strong>I wouldn’t have it any other way.</strong></p>
]]></content:encoded>
    </item>
    <item>
      <title>How Every Developer Writes Code (Whether They Admit It or Not)</title>
      <link>http://localhost:1313/posts/how-every-developer-writes-code/</link>
      <pubDate>Fri, 10 Jan 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/how-every-developer-writes-code/</guid>
      <description>Coding isn’t as glamorous as it seems. Discover the hilariously relatable stages every developer goes through while writing code.</description>
      <content:encoded><![CDATA[<p>People think developers write code in a smooth, structured way—like some kind of <strong>elegant digital architect</strong>.</p>
<p>They imagine us sitting in front of a screen, effortlessly typing out <strong>clean, efficient, well-documented functions</strong>, sipping coffee, and feeling <strong>in complete control</strong>.</p>
<p>Yeah. <strong>No.</strong></p>
<p>Here’s what <strong>actually</strong> happens.</p>
<hr>
<h2 id="step-1-the-grand-vision-"><strong>Step 1: The Grand Vision</strong> (<em>&ldquo;I know exactly how to do this.&rdquo;</em>)</h2>
<p>You get the ticket. You think, <em>Oh, this is simple.</em></p>
<p>You crack your knuckles. Open your editor. Start typing with confidence.</p>
<p>You’re in the <strong>zone</strong>. The code is flowing. You are an unstoppable force. A <strong>coding genius.</strong> You should write a book about this.</p>
<hr>
<h2 id="step-2-the-first-run-"><strong>Step 2: The First Run</strong> (<em>&ldquo;Why is it broken?&rdquo;</em>)</h2>
<p>You confidently hit run.</p>
<p><strong>Immediate error.</strong></p>
<p>Okay, no problem. A minor fix. You run it again.</p>
<p><strong>Different error.</strong></p>
<p>You frown. Maybe you mistyped something? You check the function names. Everything <strong>looks</strong> correct.</p>
<p>Run it again.</p>
<p>Now it’s <strong>really</strong> broken.</p>
<p>This is the moment you realize: <em>You have no idea what you’re doing.</em></p>
<hr>
<h2 id="step-3-the-google-phase-"><strong>Step 3: The Google Phase</strong> (<em>&ldquo;Surely someone has solved this before.&rdquo;</em>)</h2>
<p>You open Google. You type something completely ridiculous, like:</p>
<blockquote>
<p><strong>&ldquo;PHP array error help please what is happening&rdquo;</strong></p></blockquote>
<p>You find a <strong>Stack Overflow thread from 2012.</strong> Someone had a similar problem. The top answer is:</p>
<blockquote>
<p><em>&ldquo;Have you tried restarting your computer?&rdquo;</em></p></blockquote>
<p>You scroll down. Another answer <strong>looks promising.</strong> You copy and paste the code <strong>without reading it.</strong></p>
<p>It <strong>doesn&rsquo;t work.</strong></p>
<hr>
<h2 id="step-4-the-deep-spiral-"><strong>Step 4: The Deep Spiral</strong> (<em>&ldquo;I have made a terrible mistake.&rdquo;</em>)</h2>
<p>You start adding <strong>random print statements.</strong></p>
<p>You go <strong>deeper</strong> into Stack Overflow. You start reading answers from <strong>people who sound like they barely know what they’re doing</strong>—but at this point, you’re desperate.</p>
<p>You begin <strong>questioning your life choices.</strong></p>
<p><em>Maybe I should’ve been a chef? People always need food. Nobody ever asks a steak why it’s not iterating through an array properly.</em></p>
<hr>
<h2 id="step-5-the-accidental-fix-"><strong>Step 5: The Accidental Fix</strong> (<em>&ldquo;Wait&hellip; what?&rdquo;)</em></h2>
<p>You change <strong>one tiny thing</strong>—maybe a missing semicolon, maybe a different variable name—and suddenly…</p>
<p><strong>It works.</strong></p>
<p>You <strong>don’t know why.</strong> You <strong>don’t care.</strong></p>
<p>You immediately push the fix <strong>before it breaks again.</strong></p>
<hr>
<h2 id="step-6-the--"><strong>Step 6: The &ldquo;Good Enough&rdquo; Phase</strong> (<em>&ldquo;I’ll refactor this later.&rdquo;</em>)</h2>
<p>You know the code is <strong>messy.</strong> You <strong>know</strong> future-you will hate this.</p>
<p>But you tell yourself:</p>
<p><em>&ldquo;I’ll clean it up later.&rdquo;</em></p>
<p><strong>You never do.</strong></p>
<hr>
<h2 id="step-7-the-code-review-horror-"><strong>Step 7: The Code Review Horror</strong> (<em>&ldquo;What was I thinking?&rdquo;</em>)</h2>
<p>Two weeks later, someone <strong>reviews your code.</strong></p>
<blockquote>
<p><strong>&ldquo;Hey, why is there a <code>console.log('WHY IS THIS BROKEN')</code> in here?&rdquo;</strong></p></blockquote>
<blockquote>
<p><strong>&ldquo;Is this function name supposed to be <code>fixThisPleaseFinal_v3()</code>?&rdquo;</strong></p></blockquote>
<blockquote>
<p><strong>&ldquo;Did you… copy this from Stack Overflow?&rdquo;</strong></p></blockquote>
<p>You <strong>avoid eye contact.</strong> You <strong>pretend you didn’t see the comments.</strong></p>
<p>You <strong>consider changing your name and moving to another country.</strong></p>
<p>But eventually, you fix it. You push the final version. The PR gets approved.</p>
<p>And then…</p>
<p>A new ticket comes in.</p>
<p>And the <strong>cycle begins again.</strong></p>
]]></content:encoded>
    </item>
    <item>
      <title>Why I, a Programmer, Still Use Paper Like It’s 1999</title>
      <link>http://localhost:1313/posts/why-i-a-programmer-still-use-paper-like-its-1999/</link>
      <pubDate>Fri, 20 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/why-i-a-programmer-still-use-paper-like-its-1999/</guid>
      <description>Digital tools are powerful, but when it comes to problem-solving, nothing beats paper. Here’s why I, a programmer, still use analog methods.</description>
      <content:encoded><![CDATA[<h1 id="why-i-a-programmer-still-use-paper-like-its-1999"><strong>Why I, a Programmer, Still Use Paper Like It’s 1999</strong></h1>
<p>I spend my entire day in front of a screen—writing code, debugging, fixing issues. Everything I do is digital.</p>
<p>And yet, whenever I need to <strong>truly think</strong>, whenever I need to <strong>solve a problem</strong>, I reach for something ancient.</p>
<p><strong>Paper.</strong></p>
<p>Yes, real, dead-tree, old-school <strong>paper</strong>. With an <strong>actual pen.</strong> No stylus, no tablet. Just ink and a blank page.</p>
<hr>
<h2 id="why-do-i-do-this"><strong>Why Do I Do This?</strong></h2>
<p>People at my last job called me old-school. Some thought I was joking.</p>
<p><em>&ldquo;You’re a programmer, why aren’t you using Notion, Obsidian, or some mind-mapping software?&rdquo;</em></p>
<p>I tried. I really did. I tested every digital tool that promised to boost creativity, enhance focus, or revolutionize note-taking.</p>
<p>But every time I brainstormed digitally, my brain didn’t work the same way.</p>
<p>With paper, I can:</p>
<ul>
<li><strong>Think freely</strong> without clicking, scrolling, or being distracted by notifications.</li>
<li><strong>Draw connections</strong> with arrows, circles, and messy scribbles that no app can replicate.</li>
<li><strong>Physically slow down</strong>, which somehow speeds up my problem-solving.</li>
</ul>
<p>I don’t use paper because I’m nostalgic. I use it because <strong>it works.</strong></p>
<hr>
<h2 id="the-problem-with-digital-thinking"><strong>The Problem with Digital Thinking</strong></h2>
<p>I love automation. I love shortcuts. I love anything that makes life easier. But when it comes to deep thinking, digital tools have a fatal flaw:</p>
<p>They make <strong>everything too neat.</strong></p>
<p>Typing forces you into a <strong>linear thought process</strong>. You write in straight lines, format as you go, and delete mistakes like they never happened.</p>
<p>But real problem-solving? <strong>It’s messy.</strong></p>
<p>It’s half-written thoughts, sketches, crossed-out ideas, and a page that looks like a conspiracy board before you finally crack the solution.</p>
<p>Digital tools force me into boxes—literally and figuratively. I can’t draw wild arrows connecting random ideas. I can’t scribble thoughts in the margin and come back to them later.</p>
<p>When I write on paper, I’m <strong>not editing as I think.</strong> I’m letting ideas <strong>collide</strong>, not organizing them prematurely. And that’s exactly what I need to get to the right answer.</p>
<hr>
<h2 id="paper-is-my-debugging-tool"><strong>Paper is My Debugging Tool</strong></h2>
<p>For some people, thinking happens <strong>on the keyboard</strong>.</p>
<p>For me, thinking happens <strong>with a pen.</strong></p>
<p>It’s not just about notes—it’s about <strong>clarity</strong>. It’s about <strong>processing</strong>. It’s about slowing down just enough to let my brain catch up.</p>
<ul>
<li><strong>Before I write code, I write on paper.</strong> I map out the logic, draw flowcharts, and outline the structure. By the time I open my editor, I already know the architecture.</li>
<li><strong>Before I solve a bug, I sketch it out.</strong> I diagram the data flow, mark potential breakpoints, and circle points of failure. Seeing it visually helps me understand it faster.</li>
<li><strong>Before I commit to an approach, I let my brain wander on an actual page.</strong> I list pros and cons, explore alternative solutions, and play out scenarios.</li>
</ul>
<p>By the time I finally touch the keyboard, <strong>I already know what I’m doing.</strong></p>
<hr>
<h2 id="the-takeaway"><strong>The Takeaway</strong></h2>
<p>People assume that because we work in tech, we should do everything with tech. But sometimes, the best tool for the job <strong>isn’t the newest or the most advanced</strong>—it’s just the one that works.</p>
<p>No productivity hack replaces <strong>thinking</strong>.<br>
No app mimics <strong>messy creativity</strong>.<br>
No digital shortcut matches the simplicity of pen and paper.</p>
<p>So yeah, I’ll keep using paper. Call me old-school. Call me weird.</p>
<p>But also? <strong>Watch me solve problems faster than you.</strong></p>
<p>Because in a world obsessed with digital productivity, sometimes the real secret weapon is the analog one.</p>
]]></content:encoded>
    </item>
    <item>
      <title>The Never-Ending Search for the Perfect App: Why I Can’t Stop Downloading</title>
      <link>http://localhost:1313/posts/never-ending-search-for-the-perfect-app/</link>
      <pubDate>Fri, 13 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/never-ending-search-for-the-perfect-app/</guid>
      <description>Obsessed with finding the perfect app? You’re not alone. Join me on my endless quest for the ultimate productivity tools.</description>
      <content:encoded><![CDATA[<p>Some people spend their free time <strong>watching movies, playing games, or reading books</strong>.<br>
I spend mine on an endless, slightly obsessive search for <strong>the perfect app.</strong></p>
<p>It doesn’t matter what it is—<strong>file manager, calendar, task manager, note-taking app</strong>—if I use it daily, I want it to be <em>just right</em>.</p>
<p>But here’s the problem: <strong>it never is.</strong></p>
<hr>
<h2 id="the-app-store-illusion"><strong>The App Store Illusion</strong></h2>
<p>It always starts the same way.</p>
<p>I convince myself that somewhere, hidden among a sea of <strong>mediocre software</strong>, <strong>the perfect app exists</strong>.</p>
<p>So I start searching.<br>
Reading reviews.<br>
Watching <strong>YouTube comparisons at 2x speed</strong>.<br>
Checking <strong>Reddit threads full of people just like me</strong>—people who have fallen down the same rabbit hole.</p>
<p>I get lost in endless lists like:</p>
<ul>
<li><em>“Top 10 Productivity Apps You Need.”</em></li>
<li><em>“Best File Managers for Windows and iPhone.”</em></li>
</ul>
<p>Eventually, I find something <strong>promising</strong>.</p>
<p>I download it, open it, start setting it up… and then the realization hits:</p>
<p><strong>Something is off.</strong></p>
<ul>
<li>The interface is <em>almost</em> perfect, but there’s <strong>one weird design choice</strong> that drives me insane.</li>
<li>The features are great, but <strong>why is there a subscription for this?</strong></li>
<li>It’s perfect on <strong>iPhone</strong>, but the <strong>Windows version looks like it was built in 2009</strong> and abandoned.</li>
<li>It’s perfect on <strong>Windows</strong>, but the <strong>iPhone version syncs once every full moon</strong>.</li>
</ul>
<p>And just like that, <strong>the cycle continues</strong>.</p>
<hr>
<h2 id="why-do-i-do-this-to-myself"><strong>Why Do I Do This to Myself?</strong></h2>
<p>I know what you’re thinking:</p>
<p><em>&ldquo;Why not just pick one and move on?&rdquo;</em></p>
<p>Because that’s what <strong>normal people</strong> do. But my brain <strong>doesn’t work that way</strong>.</p>
<p>I need <strong>flow</strong> in my tools. If I open an app and something feels <strong>even slightly frustrating</strong>, it’s like an <strong>itch I can’t scratch</strong>.<br>
I’ll notice it <strong>every time</strong> I use it. And once I notice it? I <strong>can’t un-notice it</strong>.</p>
<p>I have a <strong>zero-tolerance policy</strong> for inefficiency:</p>
<p>✔ <strong>If an app takes more than two clicks</strong> to do something that should take one, it’s dead to me.<br>
✔ <strong>If it’s ugly</strong> or the design is inconsistent, I won’t use it, <strong>no matter how powerful it is</strong>.<br>
✔ <strong>If it’s perfect but has a monthly subscription,</strong> I will uninstall it <strong>on principle</strong>.</p>
<p>I want my apps to feel <strong>invisible</strong>, like they don’t exist. They should <strong>just work</strong> without reminding me they’re there.</p>
<p>The worst part?</p>
<p>The apps I abandoned <strong>months ago</strong>?<br>
Sometimes, I <strong>go back</strong>, thinking,</p>
<p><em>&ldquo;Maybe they fixed it. Maybe it wasn’t so bad.&rdquo;</em></p>
<p>It was.</p>
<hr>
<h2 id="the-windows-vs-iphone-struggle"><strong>The Windows vs. iPhone Struggle</strong></h2>
<p>If you’re an Apple user, you know that <strong>Apple apps just work together</strong>.<br>
But try finding an app that <strong>works flawlessly on both Windows and iPhone?</strong></p>
<p><strong>Good luck.</strong></p>
<p>I live in <strong>two worlds</strong>:</p>
<p>✔ <strong>Windows for work.</strong> It’s where I <strong>code, debug, and spend most of my day</strong>.<br>
✔ <strong>iPhone for personal life.</strong> It’s where I <strong>organize tasks, take notes, and communicate</strong>.</p>
<p>You’d think by now, in 2024, we’d have <strong>seamless cross-platform apps that work beautifully everywhere</strong>.</p>
<p>But no.</p>
<ul>
<li><strong>iPhone apps</strong> are <strong>beautiful</strong>, but their <strong>Windows counterparts</strong> feel like <strong>afterthoughts</strong>.</li>
<li><strong>Windows apps</strong> are <strong>powerful</strong>, but most of them were <strong>designed by people who hate UI</strong>.</li>
<li><strong>The “cross-platform” apps?</strong> Usually the <strong>worst of both worlds</strong>.</li>
</ul>
<p>I thought switching to <strong>Android</strong> would solve this.</p>
<p>It didn’t.</p>
<p>It just gave me <strong>different</strong> problems.</p>
<p>I’ve even considered switching <strong>everything to Apple</strong>, but the thought of using <strong>macOS for development</strong> makes me break out in <strong>hives</strong>.<br>
I like my <strong>hardware customizable</strong> and my <strong>software open</strong>, thank you very much.</p>
<p>So I keep searching, hoping that <strong>one day, the perfect ecosystem will exist</strong>.</p>
<hr>
<h2 id="the-inevitable-conclusion"><strong>The Inevitable Conclusion</strong></h2>
<p>At this point, I’ve <strong>accepted my fate</strong>.</p>
<p>I will <strong>never</strong> settle.</p>
<p>I will always <strong>tweak, test, uninstall, reinstall, and repeat</strong>.</p>
<ul>
<li>I will keep <strong>switching between One Commander and Total Commander</strong> because <strong>each is 90% perfect but missing one crucial feature</strong>.</li>
<li>I will keep <strong>trying every new calendar app</strong> that promises to <strong>revolutionize scheduling</strong>, only to <strong>go back to Google Calendar</strong>.</li>
<li>I will keep hoping that <strong>one day, Fantastical will magically become cross-platform</strong>.</li>
</ul>
<p>Maybe <strong>there is no perfect app</strong>.</p>
<p>Maybe the problem <strong>isn’t the apps—it’s me</strong>.</p>
<p>But until someone creates a:<br>
✔ <strong>Seamless</strong><br>
✔ <strong>Beautiful</strong><br>
✔ <strong>Feature-packed</strong><br>
✔ <strong>Cross-platform</strong><br>
✔ <strong>One-time-payment</strong><br>
✔ <strong>Ad-free</strong><br>
✔ <strong>Non-subscription</strong><br>
✔ <strong>Perfectly intuitive app for every function I need</strong>…</p>
<p>I’ll be here.<br>
<strong>Searching. Comparing. Complaining.</strong></p>
<p>And then <strong>downloading another one</strong>.</p>
]]></content:encoded>
    </item>
    <item>
      <title>The Browser Wars: My Exhausting Journey to Finding the Least Annoying Setup</title>
      <link>http://localhost:1313/posts/browser-wars-journey-to-least-annoying-setup/</link>
      <pubDate>Fri, 22 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/browser-wars-journey-to-least-annoying-setup/</guid>
      <description>Choosing a browser shouldn&amp;#39;t be this hard. From Safari’s WebKit prison to Windows’ Chromium clones, here’s my exhausting browser journey.</description>
      <content:encoded><![CDATA[<p>I’m a software developer. I build things for the web. I write code.<br>
I understand how browsers work.</p>
<p>And yet, somehow, <strong>choosing a default browser nearly broke me.</strong></p>
<p>It wasn’t supposed to be this complicated. <strong>It’s just a browser.</strong><br>
A glorified <strong>tab holder</strong>. A tool to open Stack Overflow, forget why I opened it, and then open another tab instead.</p>
<p>But the moment I tried to pick <em>the one</em>—<strong>the browser that would rule them all</strong>—I descended into <strong>a personal crisis so deep I started questioning reality itself.</strong></p>
<hr>
<h2 id="round-1-the-iphone-problem-or-apples-webkit-prison"><strong>Round 1: The iPhone Problem (Or: Apple’s WebKit Prison)</strong></h2>
<p>I thought I had a choice.</p>
<p>I really did.</p>
<p>I believed I could just <strong>install Chrome or Firefox on my iPhone</strong> and live a normal life.</p>
<p>What a fool I was.</p>
<p>Because Apple, in its infinite wisdom, doesn’t actually let you <strong>use</strong> a real browser on iOS.<br>
No matter what I install—<strong>Chrome, Firefox, Brave, Edge, Vivaldi, Opera, or a browser hand-coded by an underground group of free software rebels</strong>—they’re <strong>all WebKit underneath.</strong></p>
<p>Which means every browser on iPhone is just <strong>Safari wearing a cheap disguise.</strong></p>
<ul>
<li><strong>Chrome?</strong> Safari with Google Sync.</li>
<li><strong>Firefox?</strong> Safari with different branding.</li>
<li><strong>Brave?</strong> Safari with a tinfoil hat.</li>
</ul>
<p>There is no escape. Safari is the law.</p>
<p>I tried resisting. I tried using Chrome on my iPhone, <strong>convincing myself it was different.</strong><br>
It wasn’t.</p>
<p>The pages loaded the same. The bugs were the same.<br>
The only difference? <strong>A Google logo and more tracking.</strong></p>
<p>At some point, I accepted my fate. <strong>If everything is WebKit, I might as well use the original.</strong></p>
<p>Fine. <strong>Safari wins on iPhone.</strong><br>
Not because I love it, but because Apple made sure that fighting it would be a <strong>slow, battery-draining death.</strong></p>
<hr>
<h2 id="round-2-the-windows-browser-crisis-or-where-every-browser-is-the-same-anyway"><strong>Round 2: The Windows Browser Crisis (Or: Where Every Browser is the Same Anyway)</strong></h2>
<p>On Windows, the situation should be better. No WebKit dictatorship. No artificial restrictions. <strong>Freedom.</strong></p>
<p>Or so I thought.</p>
<p>In reality, <strong>every Windows browser is just Chromium with different personality issues.</strong></p>
<ul>
<li><strong>Chrome</strong> – The original Chromium overlord. <strong>Fast, powerful, but eats RAM like it’s a competitive sport</strong> and makes you sign into a Google account just to exist.</li>
<li><strong>Brave</strong> – Chrome, but constantly reminding you that it’s better than Chrome. <strong>Also, why does it keep asking me about crypto?</strong></li>
<li><strong>Vivaldi</strong> – For people who think <strong>customizing a browser is a personality trait.</strong></li>
<li><strong>Opera</strong> – Who even uses Opera? Who are you people? <strong>Reveal yourselves.</strong></li>
<li><strong>Firefox</strong> – The only non-Chromium option, so I wanted to love it. <strong>But somehow, it makes every website feel slightly off</strong>, and the font rendering gives me trust issues.</li>
</ul>
<p>At this point, I realized something horrifying.</p>
<p><strong>Every time I tried a new browser, I ended up back in Chrome’s arms.</strong></p>
<p>Not because I <em>wanted</em> to, but because <strong>the entire web is optimized for Chromium.</strong></p>
<p>I wanted to love Firefox. I even tried convincing myself that <strong>the slightly-off fonts were a feature.</strong><br>
But in the end, it just made me feel like I was in an <strong>alternate universe where everything was almost right… but not quite.</strong></p>
<p>So, I gave up. If I had to use Chromium, I might as well use <strong>the version that’s optimized for Windows</strong> and doesn’t aggressively push Google services on me.</p>
<p>And that’s how <strong>Edge won by default.</strong></p>
<hr>
<h2 id="round-3-the-syncing-nightmare-or-how-i-glued-this-mess-together"><strong>Round 3: The Syncing Nightmare (Or: How I Glued This Mess Together)</strong></h2>
<p>So now I had:</p>
<ul>
<li><strong>Safari on iPhone</strong> (<em>because Apple won’t let me have nice things</em>).</li>
<li><strong>Edge on Windows</strong> (<em>because all Chromium browsers are the same, and Edge just integrates better</em>).</li>
</ul>
<p>But now came the <strong>real</strong> problem.</p>
<p><strong>How do I sync bookmarks between two browsers that don’t want to talk to each other?</strong></p>
<ul>
<li>Google wants me to <strong>use Chrome on everything</strong> like some kind of cross-platform cult.</li>
<li>Apple wants me to <strong>use Safari on everything</strong> because I made the mistake of owning an iPhone.</li>
<li>Microsoft wants me to <strong>embrace Edge fully</strong> and probably switch to Bing while I’m at it.</li>
</ul>
<p>I refused to let any of them win.</p>
<p>So I <strong>hacked my way out</strong> with <strong>iCloud Bookmarks Extension for Edge.</strong></p>
<ul>
<li>Now <strong>Safari and Edge share bookmarks</strong> like two kids forced to get along.</li>
<li>I don’t need Google.</li>
<li>I don’t need third-party syncing tools.</li>
<li>And best of all, <strong>I can finally stop switching browsers every two weeks.</strong></li>
</ul>
<hr>
<h2 id="final-thoughts-the-browser-wars-were-a-lie"><strong>Final Thoughts: The Browser Wars Were a Lie</strong></h2>
<p>After all this research, testing, and <strong>questioning my life choices</strong>, I have one conclusion:</p>
<p><strong>All browsers are terrible.</strong></p>
<ul>
<li>Some track you aggressively.</li>
<li>Some drain your battery.</li>
<li>Some crash randomly.</li>
<li>Some make you feel guilty for using them.</li>
</ul>
<p>But in the end? <strong>A browser is just a tool.</strong></p>
<p>The best one is <strong>the one that gets in your way the least.</strong></p>
<p>For me, that means:</p>
<p>✔ <strong>Safari on iPhone</strong> (<em>because fighting Apple is exhausting</em>).<br>
✔ <strong>Edge on Windows</strong> (<em>because if all Chromium browsers are the same, I might as well pick the one with better Windows integration</em>).<br>
✔ <strong>iCloud Sync</strong> (<em>because I refuse to let Google own my bookmarks</em>).</p>
<p>Is it perfect? No.<br>
Is it better than switching browsers every week? <strong>Yes.</strong><br>
Will I probably change my mind in six months? <strong>Also yes.</strong></p>
<p>Because let’s be real—<strong>the moment you finally settle on a setup, something new comes along to break everything.</strong></p>
]]></content:encoded>
    </item>
  </channel>
</rss>
