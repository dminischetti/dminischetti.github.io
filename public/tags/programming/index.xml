<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Programming on Dominic&#39;s Sandbox</title>
    <link>http://localhost:1313/tags/programming/</link>
    <description>Recent content in Programming on Dominic&#39;s Sandbox</description>
    <generator>Hugo -- 0.144.2</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 31 Jan 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The 7 Stages of a Developer Fixing a Bug</title>
      <link>http://localhost:1313/posts/the-7-stages-of-a-developer-fixing-a-bug/</link>
      <pubDate>Fri, 31 Jan 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/the-7-stages-of-a-developer-fixing-a-bug/</guid>
      <description>Fixing a bug isn’t just about code—it’s an emotional rollercoaster. Discover the 7 stages every developer goes through while debugging.</description>
      <content:encoded><![CDATA[<p>If you’ve ever worked as a developer, you know that <strong>fixing a bug is never just fixing a bug</strong>.</p>
<p>It’s an <strong>emotional rollercoaster</strong>, a <strong>psychological test</strong>, and sometimes, <strong>a personal attack on your own intelligence</strong>.</p>
<p>And no matter how many times we do this, it always follows <strong>the same pattern</strong>.</p>
<hr>
<h2 id="1-confidence-"><strong>1. Confidence</strong> (<em>&ldquo;This will be easy.&rdquo;</em>)</h2>
<p>You open the ticket, read the description, and think, <em>Oh, I see what’s happening. I’ll knock this out in 10 minutes.</em></p>
<p>Maybe you even tell your boss or a teammate:<br>
<em>&ldquo;I’ll have a fix pushed soon.&rdquo;</em></p>
<p>(<strong>A fatal mistake.</strong>)</p>
<p>Every. Single. Time. I convince myself that it’s just a quick fix.<br>
I even schedule my next coffee break around it.</p>
<p>It’s like <strong>walking into a trap you built yourself</strong>… but you keep doing it anyway.</p>
<hr>
<h2 id="2-confusion-"><strong>2. Confusion</strong> (<em>&ldquo;Wait. What?&rdquo;</em>)</h2>
<p>You try the <strong>obvious fix</strong>. It doesn’t work.</p>
<p>You check the logs. <strong>The logs don’t make sense.</strong></p>
<p>You check the database. <strong>The values should be correct.</strong></p>
<p>You stare at the code like it <strong>personally betrayed you.</strong></p>
<p>You read the same line <strong>ten times</strong>, convinced you’re missing something.<br>
You start <strong>questioning your sanity.</strong></p>
<p><em>&ldquo;This should work. Why doesn’t it work?&rdquo;</em></p>
<p>Welcome to the rabbit hole.</p>
<hr>
<h2 id="3-denial-"><strong>3. Denial</strong> (<em>&ldquo;This bug shouldn’t even be possible.&rdquo;</em>)</h2>
<p>At this point, you start <strong>questioning reality itself.</strong></p>
<ul>
<li><em>This code has been running fine for years. Why is it breaking now?</em></li>
<li><em>It works locally but not in production. What dark magic is this?</em></li>
<li><em>Did I introduce this bug? No… no, it can’t be me. Right? RIGHT?</em></li>
</ul>
<p>At this point, I start suspecting <strong>cosmic interference.</strong></p>
<p>Mercury must be in retrograde.<br>
Maybe the server just hates me.<br>
Or maybe&hellip; just maybe&hellip;</p>
<p><strong>The compiler is broken.</strong></p>
<p>Clearly, <strong>it’s not my fault.</strong></p>
<p>It <strong>can’t</strong> be.</p>
<hr>
<h2 id="4-bargaining-"><strong>4. Bargaining</strong> (<em>&ldquo;What if I just&hellip; add some debug logs?&rdquo;</em>)</h2>
<p>You’re lost. Desperate.</p>
<p>You start throwing in <code>var_dump()</code>, <code>console.log()</code>, and debug prints <strong>like a mad scientist experimenting with electricity.</strong></p>
<p>I’ve added <strong>so many logs</strong> that my console looked like <strong>the Matrix</strong>.</p>
<p><em>&ldquo;Maybe if I just add one more debug statement, everything will make sense.&rdquo;</em></p>
<p>It <strong>never does.</strong></p>
<p>Nothing makes sense. You add <strong>more logs.</strong><br>
You <strong>commit to a full-on print statement religion.</strong></p>
<p>The logs only make things <strong>worse.</strong></p>
<hr>
<h2 id="5-anger-"><strong>5. Anger</strong> (<em>&ldquo;WHO WROTE THIS CODE?!&rdquo;</em>)</h2>
<p>You check <code>git blame</code>. You see a name.</p>
<p>It’s <strong>your name.</strong></p>
<p>…Oh.</p>
<p>This is the stage where I briefly consider <strong>quitting tech and becoming a goat farmer.</strong></p>
<p>Maybe life would be simpler if I just <strong>herded goats.</strong></p>
<p>Goats <strong>don’t</strong> have bugs.</p>
<hr>
<h2 id="6-acceptance-"><strong>6. Acceptance</strong> (<em>&ldquo;Fine. I’ll actually debug this properly.&rdquo;</em>)</h2>
<p>You take a deep breath.</p>
<p>You <strong>go back to the basics</strong>.</p>
<p>Step through the code. <strong>Check every assumption.</strong><br>
Slowly, painfully, you start to <strong>understand</strong>.</p>
<p>You realize you were <strong>overcomplicating things</strong>.<br>
You stop treating it like a <strong>personal attack</strong> and start treating it like <strong>a problem to solve</strong>.</p>
<p>And then, after <strong>hours (or days)…</strong></p>
<p>You <strong>find it.</strong></p>
<p>The bug.</p>
<p>Some missing condition. A logic error. A typo.<br>
Something so <strong>small yet so catastrophic</strong> that you briefly consider quitting tech <strong>again</strong>.</p>
<p>I’ve lost hours to a <strong>misplaced semicolon</strong>.<br>
I’ve questioned my <strong>entire career</strong> over a <code>&lt;=</code> that should have been <code>&lt;</code>.</p>
<p>And in this moment? I feel <strong>both victorious and ashamed.</strong></p>
<hr>
<h2 id="7-victory-and-regret-"><strong>7. Victory (and Regret)</strong> (<em>&ldquo;Fixed! …Oh no.&rdquo;</em>)</h2>
<p>You push the fix. You celebrate.</p>
<p>You feel like <strong>a god.</strong></p>
<p>Then you look at the time and realize:<br>
<strong>You just spent 6 hours fixing a one-line bug.</strong></p>
<p>You close the ticket. You move on.<br>
You tell yourself <strong>it won’t happen again.</strong></p>
<p>But deep down, you know the truth.</p>
<p>It <strong>always</strong> happens again.</p>
<p>Because this is the life we chose.</p>
<p>The <strong>endless cycle</strong> of <strong>confidence</strong>, <strong>confusion</strong>, <strong>denial</strong>, <strong>bargaining</strong>, <strong>anger</strong>, <strong>acceptance</strong>, and <strong>regret</strong>.</p>
<p>And honestly?</p>
<p><strong>I wouldn’t have it any other way.</strong></p>
]]></content:encoded>
    </item>
    <item>
      <title>How Every Developer Writes Code (Whether They Admit It or Not)</title>
      <link>http://localhost:1313/posts/how-every-developer-writes-code/</link>
      <pubDate>Fri, 10 Jan 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/how-every-developer-writes-code/</guid>
      <description>Coding isn’t as glamorous as it seems. Discover the hilariously relatable stages every developer goes through while writing code.</description>
      <content:encoded><![CDATA[<p>People think developers write code in a smooth, structured way—like some kind of <strong>elegant digital architect</strong>.</p>
<p>They imagine us sitting in front of a screen, effortlessly typing out <strong>clean, efficient, well-documented functions</strong>, sipping coffee, and feeling <strong>in complete control</strong>.</p>
<p>Yeah. <strong>No.</strong></p>
<p>Here’s what <strong>actually</strong> happens.</p>
<hr>
<h2 id="step-1-the-grand-vision-"><strong>Step 1: The Grand Vision</strong> (<em>&ldquo;I know exactly how to do this.&rdquo;</em>)</h2>
<p>You get the ticket. You think, <em>Oh, this is simple.</em></p>
<p>You crack your knuckles. Open your editor. Start typing with confidence.</p>
<p>You’re in the <strong>zone</strong>. The code is flowing. You are an unstoppable force. A <strong>coding genius.</strong> You should write a book about this.</p>
<hr>
<h2 id="step-2-the-first-run-"><strong>Step 2: The First Run</strong> (<em>&ldquo;Why is it broken?&rdquo;</em>)</h2>
<p>You confidently hit run.</p>
<p><strong>Immediate error.</strong></p>
<p>Okay, no problem. A minor fix. You run it again.</p>
<p><strong>Different error.</strong></p>
<p>You frown. Maybe you mistyped something? You check the function names. Everything <strong>looks</strong> correct.</p>
<p>Run it again.</p>
<p>Now it’s <strong>really</strong> broken.</p>
<p>This is the moment you realize: <em>You have no idea what you’re doing.</em></p>
<hr>
<h2 id="step-3-the-google-phase-"><strong>Step 3: The Google Phase</strong> (<em>&ldquo;Surely someone has solved this before.&rdquo;</em>)</h2>
<p>You open Google. You type something completely ridiculous, like:</p>
<blockquote>
<p><strong>&ldquo;PHP array error help please what is happening&rdquo;</strong></p></blockquote>
<p>You find a <strong>Stack Overflow thread from 2012.</strong> Someone had a similar problem. The top answer is:</p>
<blockquote>
<p><em>&ldquo;Have you tried restarting your computer?&rdquo;</em></p></blockquote>
<p>You scroll down. Another answer <strong>looks promising.</strong> You copy and paste the code <strong>without reading it.</strong></p>
<p>It <strong>doesn&rsquo;t work.</strong></p>
<hr>
<h2 id="step-4-the-deep-spiral-"><strong>Step 4: The Deep Spiral</strong> (<em>&ldquo;I have made a terrible mistake.&rdquo;</em>)</h2>
<p>You start adding <strong>random print statements.</strong></p>
<p>You go <strong>deeper</strong> into Stack Overflow. You start reading answers from <strong>people who sound like they barely know what they’re doing</strong>—but at this point, you’re desperate.</p>
<p>You begin <strong>questioning your life choices.</strong></p>
<p><em>Maybe I should’ve been a chef? People always need food. Nobody ever asks a steak why it’s not iterating through an array properly.</em></p>
<hr>
<h2 id="step-5-the-accidental-fix-"><strong>Step 5: The Accidental Fix</strong> (<em>&ldquo;Wait&hellip; what?&rdquo;)</em></h2>
<p>You change <strong>one tiny thing</strong>—maybe a missing semicolon, maybe a different variable name—and suddenly…</p>
<p><strong>It works.</strong></p>
<p>You <strong>don’t know why.</strong> You <strong>don’t care.</strong></p>
<p>You immediately push the fix <strong>before it breaks again.</strong></p>
<hr>
<h2 id="step-6-the--"><strong>Step 6: The &ldquo;Good Enough&rdquo; Phase</strong> (<em>&ldquo;I’ll refactor this later.&rdquo;</em>)</h2>
<p>You know the code is <strong>messy.</strong> You <strong>know</strong> future-you will hate this.</p>
<p>But you tell yourself:</p>
<p><em>&ldquo;I’ll clean it up later.&rdquo;</em></p>
<p><strong>You never do.</strong></p>
<hr>
<h2 id="step-7-the-code-review-horror-"><strong>Step 7: The Code Review Horror</strong> (<em>&ldquo;What was I thinking?&rdquo;</em>)</h2>
<p>Two weeks later, someone <strong>reviews your code.</strong></p>
<blockquote>
<p><strong>&ldquo;Hey, why is there a <code>console.log('WHY IS THIS BROKEN')</code> in here?&rdquo;</strong></p></blockquote>
<blockquote>
<p><strong>&ldquo;Is this function name supposed to be <code>fixThisPleaseFinal_v3()</code>?&rdquo;</strong></p></blockquote>
<blockquote>
<p><strong>&ldquo;Did you… copy this from Stack Overflow?&rdquo;</strong></p></blockquote>
<p>You <strong>avoid eye contact.</strong> You <strong>pretend you didn’t see the comments.</strong></p>
<p>You <strong>consider changing your name and moving to another country.</strong></p>
<p>But eventually, you fix it. You push the final version. The PR gets approved.</p>
<p>And then…</p>
<p>A new ticket comes in.</p>
<p>And the <strong>cycle begins again.</strong></p>
]]></content:encoded>
    </item>
  </channel>
</rss>
